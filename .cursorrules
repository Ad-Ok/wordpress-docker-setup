# Инструкции для Copilot

## Системные настройки

### Docker
- **Версия:** 28.5.1

### Docker Compose
- **Версия:** v2.40.0-desktop.1
- **Команда вызова:** `docker compose` (с пробелом, не `docker-compose`)
- **Пример использования:**
  ```bash
  # Запуск контейнеров
  docker compose up -d

  # Остановка контейнеров
  docker compose down

  # Просмотр логов
  docker compose logs

  # Пересборка и запуск
  docker compose up -d --build

  # Просмотр статуса
  docker compose ps
  ```

### Проект WordPress Docker
- **Корневая папка проекта:** `www/` - все команды Docker Compose необходимо выполнять из этой директории
- **Структура:** Классическая LEMP-стек (Linux, Nginx, MySQL, PHP)
- **Компоненты:**
  - Nginx 1.26.3
  - PHP 8.2.28-fpm с расширениями (mysqli, gd, zip, intl, mbstring, xml, soap, bcmath, exif, opcache)
  - MySQL 5.7
  - WordPress 6.6.2
- **Порты:**
  - HTTP: 80
  - HTTPS: 443
  - MySQL: 3306

### Рабочий процесс
1. Всегда использовать `docker compose` вместо `docker-compose`
2. Проверять статус контейнеров перед выполнением команд
3. Использовать `--build` при изменении Dockerfile или конфигураций
4. Проверять логи при возникновении проблем
5. Использовать `docker compose ps` для проверки статуса

### Безопасность
- Никогда не коммитить `.env` файл
- Использовать сложные пароли в продакшн
- Регулярно обновлять образы контейнеров
- Ограничить доступ к административным файлам WordPress

### Полезные команды для отладки
```bash
# Войти в контейнер
docker exec -it wordpress_php bash
docker exec -it wordpress_mysql mysql -u root -p

# Проверить логи сервисов
docker compose logs nginx
docker compose logs php
docker compose logs mysql

# Перезапустить отдельный сервис
docker compose restart php
```

## Планы
- Когда обновим MySQL до актуальной версии, проверить, существует ли для него образ под ARM64 и удалить указание платформы для MySQL образа