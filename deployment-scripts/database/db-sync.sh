#!/bin/bash
# üîÑ Database Sync Script
# –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏

set -e

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source "${SCRIPT_DIR}/config.sh"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

# ============================================
# –§–£–ù–ö–¶–ò–ò
# ============================================

# –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
show_usage() {
    cat << EOF
${BLUE}üîÑ Database Sync${NC}

${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}
  ./db-sync.sh <operation> <environment>

${YELLOW}–û–ø–µ—Ä–∞—Ü–∏–∏:${NC}
  ${GREEN}pull${NC}   - –ó–∞–≥—Ä—É–∑–∏—Ç—å –ë–î —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (REMOTE ‚Üí LOCAL)
  ${GREEN}push${NC}   - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (LOCAL ‚Üí REMOTE)

${YELLOW}–û–∫—Ä—É–∂–µ–Ω–∏—è:${NC}
  ${CYAN}prod${NC}   - Production —Å–µ—Ä–≤–µ—Ä
  ${CYAN}dev${NC}    - Development —Å–µ—Ä–≤–µ—Ä

${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}
  # –ó–∞–≥—Ä—É–∑–∏—Ç—å –ë–î —Å –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –Ω–∞ –ª–æ–∫–∞–ª–∫—É
  ./db-sync.sh pull prod

  # –ó–∞–≥—Ä—É–∑–∏—Ç—å –ë–î —Å –¥–µ–≤–∞ –Ω–∞ –ª–æ–∫–∞–ª–∫—É
  ./db-sync.sh pull dev

  # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω (–¥–ª—è initial deploy)
  ./db-sync.sh push prod

${YELLOW}–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:${NC}
  1. –°–æ–∑–¥–∞–µ—Ç backup —Ç–µ–∫—É—â–µ–π –ë–î (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
  2. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç/–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–º–µ–Ω—è–µ—Ç –¥–æ–º–µ–Ω—ã (search-replace)
  4. –û—á–∏—â–∞–µ—Ç –∫—ç—à –∏ permalinks
  5. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç snapshot –¥–ª—è –æ—Ç–∫–∞—Ç–∞

${YELLOW}–í–ù–ò–ú–ê–ù–ò–ï:${NC}
  - PULL –∑–∞–º–µ–Ω–∏—Ç –≤–∞—à—É –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î
  - PUSH –∑–∞–º–µ–Ω–∏—Ç —É–¥–∞–ª–µ–Ω–Ω—É—é –ë–î (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)

EOF
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Docker
check_docker() {
    if ! docker ps &> /dev/null; then
        echo -e "${RED}‚úó Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        exit 1
    fi
    
    if ! docker ps | grep -q "${LOCAL_DB_CONTAINER}"; then
        echo -e "${YELLOW}‚ö†Ô∏è  MySQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é...${NC}"
        docker start "${LOCAL_DB_CONTAINER}"
        sleep 3
    fi
}

# PULL: –ó–∞–≥—Ä—É–∑–∏—Ç—å –ë–î —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
pull_database() {
    local environment="$1"
    
    # –í—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è
    case "$environment" in
        prod)
            SSH_USER="$PROD_SSH_USER"
            SSH_HOST="$PROD_SSH_HOST"
            REMOTE_WP_PATH="$PROD_WP_PATH"
            REMOTE_URL="$PROD_SITE_URL"
            ;;
        dev)
            SSH_USER="$DEV_SSH_USER"
            SSH_HOST="$DEV_SSH_HOST"
            REMOTE_WP_PATH="$DEV_WP_PATH"
            REMOTE_URL="$DEV_SITE_URL"
            ;;
        *)
            echo -e "${RED}‚úó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: $environment${NC}"
            exit 1
            ;;
    esac
    
    local ENV_UPPER=$(echo "$environment" | tr '[:lower:]' '[:upper:]')
    
    echo -e "${BLUE}üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ë–î: ${ENV_UPPER} ‚Üí LOCAL${NC}\n"
    echo -e "   –û—Ç:  ${CYAN}${REMOTE_URL}${NC}"
    echo -e "   –ö:   ${GREEN}${LOCAL_SITE_URL}${NC}"
    echo ""
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –ó–ê–ú–ï–ù–ï–ù–ê!${NC}"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " confirm
    
    if [ "$confirm" != "yes" ]; then
        echo -e "${YELLOW}–û—Ç–º–µ–Ω–µ–Ω–æ${NC}"
        exit 0
    fi
    
    check_docker
    
    # 1. –°–æ–∑–¥–∞—Ç—å snapshot —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
    echo -e "\n${BLUE}[1/5]${NC} ${CYAN}–°–æ–∑–¥–∞—é snapshot —Ç–µ–∫—É—â–µ–π –ë–î...${NC}"
    "${SCRIPT_DIR}/database/db-snapshot.sh" create "before-pull-${environment}" > /dev/null
    echo -e "   ${GREEN}‚úì${NC} Snapshot —Å–æ–∑–¥–∞–Ω"
    
    # 2. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ë–î —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    echo -e "\n${BLUE}[2/5]${NC} ${CYAN}–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é –ë–î —Å ${ENV_UPPER}...${NC}"
    
    local temp_dump="/tmp/db-sync-${environment}-$(date +%Y%m%d_%H%M%S).sql.gz"
    
    ssh "${SSH_USER}@${SSH_HOST}" << ENDSSH | gzip > "${temp_dump}"
cd ${REMOTE_WP_PATH}
wp db export - 2>/dev/null
ENDSSH
    
    if [ $? -eq 0 ]; then
        local size=$(du -h "${temp_dump}" | cut -f1)
        echo -e "   ${GREEN}‚úì${NC} –ë–î —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ (${size})"
    else
        echo -e "   ${RED}‚úó${NC} –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ë–î"
        rm -f "${temp_dump}"
        exit 1
    fi
    
    # 3. –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ë–î –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π Docker
    echo -e "\n${BLUE}[3/5]${NC} ${CYAN}–ò–º–ø–æ—Ä—Ç–∏—Ä—É—é –ë–î –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π Docker...${NC}"
    
    gunzip -c "${temp_dump}" | docker exec -i "${LOCAL_DB_CONTAINER}" \
        mysql \
        -u"${LOCAL_DB_USER}" \
        -p"${LOCAL_DB_PASS}" \
        "${LOCAL_DB_NAME}" \
        2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo -e "   ${GREEN}‚úì${NC} –ë–î –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞"
    else
        echo -e "   ${RED}‚úó${NC} –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ë–î"
        rm -f "${temp_dump}"
        exit 1
    fi
    
    # –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "${temp_dump}"
    
    # 4. –ó–∞–º–µ–Ω–∏—Ç—å –¥–æ–º–µ–Ω—ã
    echo -e "\n${BLUE}[4/5]${NC} ${CYAN}–ó–∞–º–µ–Ω–∞ –¥–æ–º–µ–Ω–æ–≤...${NC}"
    
    "${SCRIPT_DIR}/database/utils/search-replace.sh" \
        "${REMOTE_URL}" \
        "${LOCAL_SITE_URL}" \
        "local" | sed 's/^/   /'
    
    # 5. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π snapshot –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞
    echo -e "\n${BLUE}[5/5]${NC} ${CYAN}–°–æ–∑–¥–∞—é snapshot –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞...${NC}"
    "${SCRIPT_DIR}/database/db-snapshot.sh" create "after-pull-${environment}" > /dev/null
    echo -e "   ${GREEN}‚úì${NC} Snapshot —Å–æ–∑–¥–∞–Ω"
    
    echo -e "\n${GREEN}‚úÖ –ë–î —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å ${ENV_UPPER}!${NC}"
    echo -e "\n${CYAN}–ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"
    echo -e "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: ${LOCAL_SITE_URL}"
    echo -e "   2. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è: ${YELLOW}./db-snapshot.sh restore latest${NC}"
}

# PUSH: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
push_database() {
    local environment="$1"
    
    # PUSH —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ PROD –¥–ª—è initial deploy
    if [ "$environment" != "prod" ]; then
        echo -e "${RED}‚úó PUSH —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ PROD${NC}"
        echo -e "–î–ª—è DEV –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: ${CYAN}./db-migrate.sh apply dev${NC}"
        exit 1
    fi
    
    SSH_USER="$PROD_SSH_USER"
    SSH_HOST="$PROD_SSH_HOST"
    REMOTE_WP_PATH="$PROD_WP_PATH"
    REMOTE_URL="$PROD_SITE_URL"
    
    echo -e "${BLUE}üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –ë–î: LOCAL ‚Üí PROD${NC}\n"
    echo -e "   –û—Ç:  ${CYAN}${LOCAL_SITE_URL}${NC}"
    echo -e "   –ö:   ${GREEN}${REMOTE_URL}${NC}"
    echo ""
    
    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    echo -e "${RED}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${RED}‚ïë  ‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï ‚ö†Ô∏è                 ‚ïë${NC}"
    echo -e "${RED}‚ïë                                                    ‚ïë${NC}"
    echo -e "${RED}‚ïë  –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ó–ê–ú–ï–ù–ò–¢–¨ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ü–†–û–î–ê–ö–®–ï–ù–ê!  ‚ïë${NC}"
    echo -e "${RED}‚ïë  –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ü–û–¢–ï–†–Ø–ù–´!                        ‚ïë${NC}"
    echo -e "${RED}‚ïë                                                    ‚ïë${NC}"
    echo -e "${RED}‚ïë  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è Initial Deploy!           ‚ïë${NC}"
    echo -e "${RED}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    
    read -p "–í–≤–µ–¥–∏—Ç–µ 'REPLACE DATABASE' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirm
    
    if [ "$confirm" != "REPLACE DATABASE" ]; then
        echo -e "${YELLOW}–û—Ç–º–µ–Ω–µ–Ω–æ${NC}"
        exit 0
    fi
    
    check_docker
    
    # 1. –°–æ–∑–¥–∞—Ç—å backup –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    echo -e "\n${BLUE}[1/5]${NC} ${CYAN}–°–æ–∑–¥–∞—é backup –Ω–∞ PROD...${NC}"
    
    ssh "${SSH_USER}@${SSH_HOST}" << ENDSSH
cd ${REMOTE_WP_PATH}
echo "‚Üí –°–æ–∑–¥–∞—é backup..."
mkdir -p ../backups
wp db export ../backups/backup-before-initial-deploy-\$(date +%Y%m%d_%H%M%S).sql.gz
echo "‚úì Backup —Å–æ–∑–¥–∞–Ω"
ENDSSH
    
    if [ $? -eq 0 ]; then
        echo -e "   ${GREEN}‚úì${NC} Backup —Å–æ–∑–¥–∞–Ω –Ω–∞ PROD"
    else
        echo -e "   ${RED}‚úó${NC} –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ backup"
        exit 1
    fi
    
    # 2. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î
    echo -e "\n${BLUE}[2/5]${NC} ${CYAN}–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î...${NC}"
    
    local temp_dump="/tmp/db-sync-push-$(date +%Y%m%d_%H%M%S).sql.gz"
    
    docker exec "${LOCAL_DB_CONTAINER}" \
        mysqldump \
        -u"${LOCAL_DB_USER}" \
        -p"${LOCAL_DB_PASS}" \
        "${LOCAL_DB_NAME}" \
        2>/dev/null | gzip > "${temp_dump}"
    
    if [ $? -eq 0 ]; then
        local size=$(du -h "${temp_dump}" | cut -f1)
        echo -e "   ${GREEN}‚úì${NC} –ë–î —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ (${size})"
    else
        echo -e "   ${RED}‚úó${NC} –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ë–î"
        rm -f "${temp_dump}"
        exit 1
    fi
    
    # 3. –ó–∞–º–µ–Ω–∏—Ç—å –¥–æ–º–µ–Ω—ã –ü–ï–†–ï–î –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    echo -e "\n${BLUE}[3/5]${NC} ${CYAN}–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ë–î (–∑–∞–º–µ–Ω–∞ –¥–æ–º–µ–Ω–æ–≤)...${NC}"
    
    # –†–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å, –∑–∞–º–µ–Ω–∏—Ç—å —á–µ—Ä–µ–∑ WP-CLI –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ, —É–ø–∞–∫–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ
    local temp_replaced="/tmp/db-sync-replaced-$(date +%Y%m%d_%H%M%S).sql.gz"
    
    gunzip -c "${temp_dump}" | docker exec -i "${LOCAL_DB_CONTAINER}" \
        mysql \
        -u"${LOCAL_DB_USER}" \
        -p"${LOCAL_DB_PASS}" \
        --database="${LOCAL_DB_NAME}_temp" \
        2>/dev/null
    
    docker exec "${LOCAL_DB_CONTAINER}" \
        wp search-replace \
        "${LOCAL_SITE_URL}" \
        "${REMOTE_URL}" \
        --path="${LOCAL_WP_PATH}" \
        --precise \
        --recurse-objects \
        --all-tables \
        --url="${LOCAL_SITE_URL}" \
        --skip-columns=guid \
        2>/dev/null | sed 's/^/   /'
    
    docker exec "${LOCAL_DB_CONTAINER}" \
        mysqldump \
        -u"${LOCAL_DB_USER}" \
        -p"${LOCAL_DB_PASS}" \
        "${LOCAL_DB_NAME}" \
        2>/dev/null | gzip > "${temp_replaced}"
    
    echo -e "   ${GREEN}‚úì${NC} –î–æ–º–µ–Ω—ã –∑–∞–º–µ–Ω–µ–Ω—ã"
    
    # 4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ë–î –Ω–∞ PROD
    echo -e "\n${BLUE}[4/5]${NC} ${CYAN}–û—Ç–ø—Ä–∞–≤–ª—è—é –ë–î –Ω–∞ PROD...${NC}"
    
    gunzip -c "${temp_replaced}" | ssh "${SSH_USER}@${SSH_HOST}" \
        "cd ${REMOTE_WP_PATH} && wp db import -"
    
    if [ $? -eq 0 ]; then
        echo -e "   ${GREEN}‚úì${NC} –ë–î –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ PROD"
    else
        echo -e "   ${RED}‚úó${NC} –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ë–î –Ω–∞ PROD"
        rm -f "${temp_dump}" "${temp_replaced}"
        exit 1
    fi
    
    # –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    rm -f "${temp_dump}" "${temp_replaced}"
    
    # 5. –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –Ω–∞ PROD
    echo -e "\n${BLUE}[5/5]${NC} ${CYAN}–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –Ω–∞ PROD...${NC}"
    
    ssh "${SSH_USER}@${SSH_HOST}" << ENDSSH
cd ${REMOTE_WP_PATH}
wp cache flush 2>/dev/null || true
wp rewrite flush 2>/dev/null || true
echo "‚úì –ö—ç—à –æ—á–∏—â–µ–Ω"
ENDSSH
    
    echo -e "\n${GREEN}‚úÖ –ë–î —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ PROD!${NC}"
    echo -e "\n${CYAN}–ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"
    echo -e "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: ${REMOTE_URL}"
    echo -e "   2. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ backup –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
}

# ============================================
# MAIN
# ============================================

OPERATION="$1"
ENVIRONMENT="$2"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ -z "$OPERATION" ] || [ -z "$ENVIRONMENT" ]; then
    show_usage
    exit 1
fi

case "$OPERATION" in
    pull)
        pull_database "$ENVIRONMENT"
        ;;
    push)
        push_database "$ENVIRONMENT"
        ;;
    help|--help|-h)
        show_usage
        ;;
    *)
        echo -e "${RED}‚úó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: $OPERATION${NC}"
        echo ""
        show_usage
        exit 1
        ;;
esac
